#!/bin/bash
# quick_switch.sh - Instantly switch between experiment configurations
# No need to edit files manually!

show_help() {
    echo "Quick Experiment Switcher"
    echo "========================"
    echo "Usage: $0 [PRESET] [MODE]"
    echo ""
    echo "PRESETS:"
    echo "  ms         - Microstate experiments (ms.py, ms_indep.py, ms_adapt.py)"
    echo "  dcn        - DCN experiments (dcn.py, dcn_indep.py, dcn_adapt.py)"
    echo "  dep        - Dependent combined (dcn.py + ms.py → comb_ms_dcn.py)"
    echo "  indep      - Independent combined (dcn_indep.py + ms_indep.py → comb_ms_dcn_indep.py)"
    echo "  adapt      - Adaptive combined (dcn_adapt.py + ms_adapt.py → comb_ms_dcn_adapt.py)"
    echo "  custom     - Edit custom configuration interactively"
    echo ""
    echo "MODES:"
    echo "  parallel   - All scripts run simultaneously (default)"
    echo "  sequential - Scripts run one after another"
    echo "  dependency - Scripts 1&2 parallel, then script 3"
    echo ""
    echo "EXAMPLES:"
    echo "  $0 ms parallel          # Run MS experiments in parallel"
    echo "  $0 dcn sequential       # Run DCN experiments sequentially"
    echo "  $0 dep dependency       # Run dcn.py+ms.py parallel, then combined"
    echo "  $0 indep dependency     # Run dcn_indep.py+ms_indep.py, then combined"
    echo "  $0 adapt dependency     # Run dcn_adapt.py+ms_adapt.py, then combined"
    echo "  $0 custom               # Set up custom experiments"
    echo ""
    echo "QUICK START:"
    echo "  1. $0 ms                # Switch to microstate experiments"
    echo "  2. ./flexible_runner.sh # Run the experiments"
    echo ""
}

# Function to update config file
update_config() {
    local preset="$1"
    local mode="$2"
    
    # Backup original config
    cp experiment_config.sh experiment_config.sh.backup
    
    # Create new config
    cat > experiment_config.sh << EOF
#!/bin/bash
# experiment_config.sh - AUTO-GENERATED by quick_switch.sh
# Last updated: $(date)

# =============================================================================
# CURRENT CONFIGURATION: $preset ($mode)
# =============================================================================
EOF

    case "$preset" in
        "ms")
            cat >> experiment_config.sh << 'EOF'

# --- MICROSTATE EXPERIMENTS ---
EXPERIMENT_TYPE="microstate"
SCRIPT_1="subject_dependent/ms.py"
SCRIPT_2="subject_independent/ms_indep.py" 
SCRIPT_3="subject_adaptive/ms_adapt.py"
JOB_NAME_1="ms_dependent"
JOB_NAME_2="ms_independent"
JOB_NAME_3="ms_adaptive"
EOF
            ;;
        "dcn")
            cat >> experiment_config.sh << 'EOF'

# --- DCN EXPERIMENTS ---
EXPERIMENT_TYPE="dcn"
SCRIPT_1="subject_dependent/dcn.py"
SCRIPT_2="subject_independent/dcn_indep.py"
SCRIPT_3="subject_adaptive/dcn_adapt.py"
JOB_NAME_1="dcn_dependent"
JOB_NAME_2="dcn_independent"
JOB_NAME_3="dcn_adaptive"
EOF
            ;;
        "dep")
            cat >> experiment_config.sh << 'EOF'

# --- DEPENDENT COMBINED EXPERIMENTS ---
EXPERIMENT_TYPE="dependent_combined"
SCRIPT_1="subject_dependent/dcn.py"
SCRIPT_2="subject_dependent/ms.py"
SCRIPT_3="combined/comb_ms_dcn.py"
JOB_NAME_1="dcn_dep"
JOB_NAME_2="ms_dep"
JOB_NAME_3="combined_dep"
EOF
            ;;
        "indep")
            cat >> experiment_config.sh << 'EOF'

# --- INDEPENDENT COMBINED EXPERIMENTS ---
EXPERIMENT_TYPE="independent_combined"
SCRIPT_1="subject_independent/dcn_indep.py"
SCRIPT_2="subject_independent/ms_indep.py"
SCRIPT_3="combined/comb_ms_dcn_indep.py"
JOB_NAME_1="dcn_indep"
JOB_NAME_2="ms_indep"
JOB_NAME_3="combined_indep"
EOF
            ;;
        "adapt")
            cat >> experiment_config.sh << 'EOF'

# --- ADAPTIVE COMBINED EXPERIMENTS ---
EXPERIMENT_TYPE="adaptive_combined"
SCRIPT_1="subject_adaptive/dcn_adapt.py"
SCRIPT_2="subject_adaptive/ms_adapt.py"
SCRIPT_3="combined/comb_ms_dcn_adapt.py"
JOB_NAME_1="dcn_adapt"
JOB_NAME_2="ms_adapt"
JOB_NAME_3="combined_adapt"
EOF
            ;;
        "custom")
            echo ""
            echo "=== CUSTOM EXPERIMENT SETUP ==="
            read -p "Enter script 1 path: " script1
            read -p "Enter script 2 path: " script2  
            read -p "Enter script 3 path (optional): " script3
            read -p "Enter job name 1: " job1
            read -p "Enter job name 2: " job2
            read -p "Enter job name 3 (optional): " job3
            
            cat >> experiment_config.sh << EOF

# --- CUSTOM EXPERIMENTS ---
EXPERIMENT_TYPE="custom"
SCRIPT_1="$script1"
SCRIPT_2="$script2"
SCRIPT_3="$script3"
JOB_NAME_1="$job1"
JOB_NAME_2="$job2"
JOB_NAME_3="$job3"
EOF
            ;;
        *)
            echo "Error: Unknown preset '$preset'"
            exit 1
            ;;
    esac

    # Add execution mode
    case "$mode" in
        "parallel")
            cat >> experiment_config.sh << 'EOF'

# =============================================================================
# EXECUTION MODE: PARALLEL
# =============================================================================
EXECUTION_MODE="parallel"
MAX_PARALLEL_JOBS=3
EOF
            ;;
        "sequential")
            cat >> experiment_config.sh << 'EOF'

# =============================================================================
# EXECUTION MODE: SEQUENTIAL
# =============================================================================
EXECUTION_MODE="sequential"
MAX_PARALLEL_JOBS=1
EOF
            ;;
        "dependency")
            cat >> experiment_config.sh << 'EOF'

# =============================================================================
# EXECUTION MODE: DEPENDENCY
# =============================================================================
EXECUTION_MODE="dependency"
MAX_PARALLEL_JOBS=2  # Scripts 1&2 run in parallel, then script 3
EOF
            ;;
        *)
            echo "Error: Unknown mode '$mode'"
            exit 1
            ;;
    esac

    # Add common settings
    cat >> experiment_config.sh << 'EOF'

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================
CONDA_ENV="myvenv"
# GPU assignments (optional - leave empty for auto-assign)
GPU_1=""  # GPU for script 1
GPU_2=""  # GPU for script 2  
GPU_3=""  # GPU for script 3

# =============================================================================
# ADVANCED SETTINGS
# =============================================================================
SCRIPT_CHECK_ENABLED=true  # Check if scripts exist before submitting
RESULTS_FOLDER="../Output/ica_rest_all"  # Where results will be saved

# Export variables for use by other scripts
export EXPERIMENT_TYPE SCRIPT_1 SCRIPT_2 SCRIPT_3 
export JOB_NAME_1 JOB_NAME_2 JOB_NAME_3
export EXECUTION_MODE MAX_PARALLEL_JOBS CONDA_ENV
export GPU_1 GPU_2 GPU_3 SCRIPT_CHECK_ENABLED RESULTS_FOLDER

echo "=== EXPERIMENT CONFIGURATION LOADED ==="
echo "Type: $EXPERIMENT_TYPE"
echo "Mode: $EXECUTION_MODE"
echo "Scripts: $SCRIPT_1, $SCRIPT_2, $SCRIPT_3"
echo "Jobs: $JOB_NAME_1, $JOB_NAME_2, $JOB_NAME_3"
echo "Environment: $CONDA_ENV"
echo "========================================"
EOF

    chmod +x experiment_config.sh
    
    echo ""
    echo "✅ Configuration updated successfully!"
    echo "📁 Preset: $preset"
    echo "⚙️  Mode: $mode"
    echo "💾 Backup saved as: experiment_config.sh.backup"
    echo ""
    echo "🚀 Ready to run! Execute:"
    echo "   ./flexible_runner.sh"
    echo ""
}

# Main logic
case "${1:-help}" in
    "ms"|"microstate")
        mode="${2:-parallel}"
        update_config "ms" "$mode"
        ;;
    "dcn")
        mode="${2:-parallel}"
        update_config "dcn" "$mode"
        ;;
    "dep"|"dependent")
        mode="${2:-dependency}"
        update_config "dep" "$mode"
        ;;
    "indep"|"independent")
        mode="${2:-dependency}"
        update_config "indep" "$mode"
        ;;
    "adapt"|"adaptive")
        mode="${2:-dependency}"
        update_config "adapt" "$mode"
        ;;
    "custom")
        mode="${2:-parallel}"
        update_config "custom" "$mode"
        ;;
    "help"|"-h"|"--help"|"")
        show_help
        ;;
    *)
        echo "❌ Unknown preset: $1"
        echo ""
        show_help
        exit 1
        ;;
esac